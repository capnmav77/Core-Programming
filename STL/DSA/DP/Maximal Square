/*
    Company Tags  : Flipkart
    Leetcode Link : https://leetcode.com/problems/maximal-square/
*/

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.size() == 0)
            return 0;
        int r = matrix.size();
        int c = matrix[0].size();
        
        vector<vector<int>> t(r, vector<int>(c, 0));
        int side = matrix[0][0]=='0'?0:1;
        for(int i = 0; i<r; i++) {
            for(int j = 0; j<c; j++) {
                if(i == 0 || j == 0) {
                    t[i][j] = matrix[i][j] =='0' ? 0 : 1;
                } else {
                    if(matrix[i][j] == '1') {
                        //Because, if you have any 0, then you cannot expand side of square
                        t[i][j] = 1 + min({t[i-1][j], t[i][j-1], t[i-1][j-1]});
                    }
                }
                side = max(side, t[i][j]);
            }
        }
        
        return side*side;
    }
};
