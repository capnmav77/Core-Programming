/*
    Company Tags  : Paytm, Accolite, Microsoft, MAQ Software, Adobe, Veritas
    Leetcode Link : https://leetcode.com/problems/sort-list/
*/

class Solution {
public:
    ListNode* mergeSortedList(ListNode* head1, ListNode* head2) {
        if(!head1)
            return head2;
        if(!head2)
            return head1;
        
        ListNode* head = new ListNode(-1);
        ListNode* temp = head;
        
        while(head1 && head2) {
            if(head1->val > head2->val) {
                temp->next = head2;
                head2 = head2->next;
            } else {
                temp->next = head1;
                head1 = head1->next;
            }
            temp = temp->next;
        }
        if(head1)
            temp->next = head1;
        else
            temp->next = head2;
        return head->next;
    }
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next)
            return head;
        
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode* prev = NULL;
        while(fast && fast->next) {
            prev = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        if(prev) {
            prev->next = NULL;
        }
        
        ListNode* list1 = sortList(head);
        ListNode* list2 = sortList(slow);
        
        return mergeSortedList(list1, list2);
    }
};
