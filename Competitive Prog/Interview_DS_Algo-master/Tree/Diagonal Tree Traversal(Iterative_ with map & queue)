/*
Company Tags : Amazon, Paytm
*/
#include <iostream>
#include <vector>
#include <queue>
#include <map>
using namespace std;

struct Node {
	int data;
	Node *left, *right;
	Node(int data) {
        this->data = data;
        this->left = this->right = NULL;
	}
};

Node* newNode(int data) {
	return new Node(data);
}


void diagonalPrint(Node* root) {
    if(!root)
        return;
    map<int, vector<int>> mp;
    queue<pair<Node*, int>> que;
    que.push({root, 0});

    while(!que.empty()) {
        Node* curr = que.front().first;
        int level = que.front().second;
        que.pop();
        if(curr->left)
            que.push({curr->left, level+1});
        if(curr->right)
            que.push({curr->right, level});
        mp[level].push_back(curr->data);
    }

    for(auto it:mp) {
        for(int i:it.second) {
            cout << i << " ";
        }
        cout << endl;
    }
}

int main()
{
	Node* root = newNode(8);
	root->left = newNode(3);
	root->right = newNode(10);
	root->left->left = newNode(1);
	root->left->right = newNode(6);
	root->right->right = newNode(14);
	root->right->right->left = newNode(13);
	root->left->right->left = newNode(4);
	root->left->right->right = newNode(7);

	diagonalPrint(root);

	return 0;
}
