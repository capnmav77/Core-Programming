/*
    Company Tags  : Google, Amazon, Microsoft
    Leetcode Link : https://leetcode.com/problems/all-elements-in-two-binary-search-trees/
*/

class Solution {
public:
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        stack<TreeNode*> s1;
        stack<TreeNode*> s2;
        TreeNode* curr1 = root1;
        TreeNode* curr2 = root2;
        vector<int> result;
        while(curr1 || curr2 || !s1.empty() || !s2.empty()) {
            while(curr1) {
                s1.push(curr1);
                curr1 = curr1->left;
            }
            
            while(curr2) {
                s2.push(curr2);
                curr2 = curr2->left;
            }
            
            if(s1.empty()) {
                curr2 = s2.top();
                s2.pop();
                result.push_back(curr2->val);
                curr2 = curr2->right;
            } else if(s2.empty()) {
                curr1 = s1.top();
                s1.pop();
                result.push_back(curr1->val);
                curr1 = curr1->right;
            } else {
                if(s1.top()->val > s2.top()->val) {
                    curr2 = s2.top();
                    s2.pop();
                    result.push_back(curr2->val);
                    curr2 = curr2->right;
                } else {
                    curr1 = s1.top();
                    s1.pop();
                    result.push_back(curr1->val);
                    curr1 = curr1->right;
                }
            }
        }
        return result;
    }
};
