/*
    Company tags  : Microsoft
    Leetcoed Link : https://leetcode.com/problems/maximum-binary-tree/
*/

class Solution {
public:
    int max_index(vector<int>& nums, int start, int end) {
        int index = start;
        int max = nums[start];
        for(int i = start; i<=end; i++) {
            if(nums[i] > max) {
                max = nums[i];
                index = i;
            }
        }
        return index;
    }
    TreeNode* tree(vector<int>& nums, int start, int end) {
        if(start > end)
            return NULL;
        if(start == end) {
            return new TreeNode(nums[start]);
        }
        int index = max_index(nums, start, end);
        TreeNode* root = new TreeNode(nums[index]);
        root->left  = tree(nums, start, index-1);
        root->right = tree(nums, index+1, end);
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return tree(nums, 0, nums.size()-1);
    }
};
