/*
    Company Tags     : Amazon
    Leetcode Qn Link : https://leetcode.com/problems/k-closest-points-to-origin/
*/

typedef pair<int, vector<int>> P;
class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<P> pq;
        for(vector<int> vec:points) {
            int x = vec[0];
            int y = vec[1];
            int d = (x*x) + (y*y);
            pq.push({d, {x,y}});
            if(pq.size() > k)
                pq.pop();
        }
        vector<vector<int>> result;
        while(!pq.empty()) {
            result.push_back(pq.top().second);
            pq.pop();
        }
        return result;
    }
};
